apiVersion: apps/v1
kind: Deployment
metadata:
  name: oomkilled-test
  labels:
    app: oomkilled-test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: oomkilled-test
  template:
    metadata:
      labels:
        app: oomkilled-test
    spec:
      containers:
      - name: memory-hog
        image: python:3.9-slim
        command: ['python', '-c']
        args:
          - |
            import time
            import sys
            
            print("üöÄ Iniciando test de OOMKilled...")
            print("üìä L√≠mite de memoria configurado: 50Mi")
            print("üî• Consumiendo memoria progresivamente...")
            
            # Lista para almacenar bloques de memoria
            memory_blocks = []
            block_size = 1024 * 1024  # 1MB por bloque
            block_count = 0
            
            try:
                while True:
                    # Crear un bloque de memoria de 1MB
                    block = bytearray(block_size)
                    memory_blocks.append(block)
                    block_count += 1
                    
                    # Mostrar progreso cada 5 bloques
                    if block_count % 5 == 0:
                        print(f"üì¶ Bloque #{block_count}: {block_count}MB consumidos")
                    
                    # Peque√±a pausa para hacer el consumo m√°s visible
                    time.sleep(0.1)
                    
            except MemoryError:
                print("üí• MemoryError capturado - l√≠mite de memoria alcanzado")
                sys.exit(1)
            except Exception as e:
                print(f"‚ùå Error inesperado: {e}")
                sys.exit(1)
        resources:
          requests:
            cpu: 50m
            memory: 25Mi
          limits:
            cpu: 100m
            memory: 50Mi  # L√≠mite muy bajo para garantizar OOMKilled
        livenessProbe:
          exec:
            command: ['python', '-c', 'import sys; sys.exit(0)']
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          exec:
            command: ['python', '-c', 'import sys; sys.exit(0)']
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: oomkilled-test-service
spec:
  selector:
    app: oomkilled-test
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oomkilled-test-config
data:
  scenario_type: "oomkilled_test"
  description: "Test espec√≠fico para simular OOMKilled errors"
  expected_behavior: "Pods deber√≠an ser terminados por OOMKilled"
  memory_limit: "50Mi"
  replicas: "3" 